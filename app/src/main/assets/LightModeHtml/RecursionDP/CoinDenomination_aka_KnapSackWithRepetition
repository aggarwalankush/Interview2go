<font color="#0000aa">package</font> RecursionDP;<br/><br/><br/><font color="#0000aa">import</font> <font color="#00aaaa; text-decoration: underline">java.util.Arrays</font>;<br/><br/><font color="#aaaaaa; font-style: italic">/**</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;Given&nbsp;&nbsp;an&nbsp;&nbsp;infinite&nbsp;&nbsp;supply&nbsp;&nbsp;of&nbsp;&nbsp;each&nbsp;&nbsp;of&nbsp;&nbsp;V&nbsp;&nbsp;=&nbsp;&nbsp;{V1,&nbsp;&nbsp;V2&nbsp;&nbsp;..Vn}&nbsp;&nbsp;valued&nbsp;&nbsp;coins</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;find&nbsp;&nbsp;ways&nbsp;&nbsp;to&nbsp;&nbsp;change&nbsp;&nbsp;K&nbsp;&nbsp;cents</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;for&nbsp;&nbsp;eg,&nbsp;&nbsp;if&nbsp;&nbsp;K&nbsp;&nbsp;=&nbsp;&nbsp;4&nbsp;&nbsp;and&nbsp;&nbsp;V&nbsp;&nbsp;=&nbsp;&nbsp;{1,2,3},&nbsp;&nbsp;there&nbsp;&nbsp;are&nbsp;&nbsp;four&nbsp;&nbsp;solutions:&nbsp;&nbsp;{1,1,1,1},{1,1,2},{2,2},{1,3}.</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;So&nbsp;&nbsp;output&nbsp;&nbsp;should&nbsp;&nbsp;be&nbsp;&nbsp;4.</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*/</font><br/><font color="#0000aa">public</font> <font color="#0000aa">class</font> <font color="#00aa00; text-decoration: underline">CoinDenomination_aka_KnapSackWithRepetition</font> {<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">public</font> <font color="#0000aa">static</font> <font color="#00aaaa">void</font> <font color="#00aa00">main</font>(String[] args) {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#00aaaa">int</font>[] input = {<font color="#009999">1</font>, <font color="#009999">2</font>, <font color="#009999">3</font>};<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#00aaaa">int</font> k = <font color="#009999">4</font>;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<font color="#1e90ff">out</font>.<font color="#1e90ff">println</font>(<font color="#aa5500">&quot;Input coin values : &quot;</font> + Arrays.<font color="#1e90ff">toString</font>(input));<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<font color="#1e90ff">out</font>.<font color="#1e90ff">println</font>(<font color="#aa5500">&quot;Ways to change &quot;</font> + k + <font color="#aa5500">&quot; cents : &quot;</font> + findWays(input, k));<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">private</font> <font color="#0000aa">static</font> <font color="#00aaaa">int</font> <font color="#00aa00">findWays</font>(<font color="#00aaaa">int</font>[] coins, <font color="#00aaaa">int</font> k) {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#00aaaa">int</font>[] ways = <font color="#0000aa">new</font> <font color="#00aaaa">int</font>[k + <font color="#009999">1</font>];<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ways[<font color="#009999">0</font>] = <font color="#009999">1</font>;<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">for</font> (<font color="#00aaaa">int</font> coinVal : coins)<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">for</font> (<font color="#00aaaa">int</font> j = coinVal; j &lt;= k; j++)<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ways[j] += ways[j - coinVal];<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">return</font> ways[k];<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>}<br/>