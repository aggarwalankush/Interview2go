<font color="#0000aa">package</font> Trees;<br/><br/><font color="#0000aa">import</font> <font color="#00aaaa; text-decoration: underline">java.util.ArrayList</font>;<br/><font color="#0000aa">import</font> <font color="#00aaaa; text-decoration: underline">java.util.Collections</font>;<br/><font color="#aaaaaa; font-style: italic">//@formatter:off</font><br/><font color="#aaaaaa; font-style: italic">/**</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;Given&nbsp;&nbsp;a&nbsp;&nbsp;Binary&nbsp;&nbsp;Tree,&nbsp;&nbsp;convert&nbsp;&nbsp;it&nbsp;&nbsp;to&nbsp;&nbsp;a&nbsp;&nbsp;Binary&nbsp;&nbsp;Search&nbsp;&nbsp;Tree.</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;The&nbsp;&nbsp;conversion&nbsp;&nbsp;must&nbsp;&nbsp;be&nbsp;&nbsp;done&nbsp;&nbsp;in&nbsp;&nbsp;such&nbsp;&nbsp;a&nbsp;&nbsp;way&nbsp;&nbsp;that&nbsp;&nbsp;keeps&nbsp;&nbsp;the&nbsp;&nbsp;original&nbsp;&nbsp;structure&nbsp;&nbsp;of&nbsp;&nbsp;Binary&nbsp;&nbsp;Tree</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*/</font><br/><font color="#aaaaaa; font-style: italic">//@formatter:on</font><br/><br/><font color="#0000aa">public</font> <font color="#0000aa">class</font> <font color="#00aa00; text-decoration: underline">BTtoBST</font> {<br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">public</font> <font color="#0000aa">static</font> <font color="#00aaaa">void</font> <font color="#00aa00">main</font>(String[] args) {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TreeNode root = TreeUtils.<font color="#1e90ff">createBinaryTree</font>(<font color="#009999">10</font>, <font color="#009999">17</font>, <font color="#009999">1</font>, <font color="#009999">3</font>, <font color="#009999">9</font>, <font color="#0000aa">null</font>, <font color="#009999">16</font>);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ArrayList&lt;Integer&gt; list = <font color="#0000aa">new</font> ArrayList&lt;&gt;();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inorder(root, list);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Collections.<font color="#1e90ff">sort</font>(list);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TreeNode newRoot = TreeUtils.<font color="#1e90ff">createBST</font>(listToArray(list));<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<font color="#1e90ff">out</font>.<font color="#1e90ff">println</font>(<font color="#aa5500">&quot;Root of BST is &quot;</font> + newRoot);<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">public</font> <font color="#0000aa">static</font> <font color="#00aaaa">void</font> <font color="#00aa00">inorder</font>(TreeNode root, ArrayList&lt;Integer&gt; list) {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">if</font> (root == <font color="#0000aa">null</font>)<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">return</font>;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inorder(root.<font color="#1e90ff">left</font>, list);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.<font color="#1e90ff">add</font>(root.<font color="#1e90ff">data</font>);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inorder(root.<font color="#1e90ff">right</font>, list);<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">public</font> <font color="#0000aa">static</font> <font color="#00aaaa">int</font>[] <font color="#00aa00">listToArray</font>(ArrayList&lt;Integer&gt; list) {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#00aaaa">int</font>[] array = <font color="#0000aa">new</font> <font color="#00aaaa">int</font>[list.<font color="#1e90ff">size</font>()];<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#00aaaa">int</font> j = <font color="#009999">0</font>;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">for</font> (<font color="#00aaaa">int</font> i : list) array[j++] = i;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">return</font> array;<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}<br/>