<font color="#0000aa">package</font> Trees;<br/><br/><font color="#aaaaaa; font-style: italic">//@formatter:off</font><br/><font color="#aaaaaa; font-style: italic">/**</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;Check&nbsp;&nbsp;if&nbsp;&nbsp;a&nbsp;&nbsp;binary&nbsp;&nbsp;tree&nbsp;&nbsp;is&nbsp;&nbsp;a&nbsp;&nbsp;binary&nbsp;&nbsp;search&nbsp;&nbsp;tree.</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;13</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*/</font><br/><font color="#aaaaaa; font-style: italic">//@formatter:on</font><br/><br/><font color="#0000aa">public</font> <font color="#0000aa">class</font> <font color="#00aa00; text-decoration: underline">BSTValid</font> {<br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">public</font> <font color="#0000aa">static</font> <font color="#00aaaa">void</font> <font color="#00aa00">main</font>(String[] args) {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TreeNode root = TreeUtils.<font color="#1e90ff">createBinaryTree</font>(<font color="#009999">10</font>, <font color="#009999">7</font>, <font color="#009999">13</font>, <font color="#009999">3</font>, <font color="#009999">9</font>, <font color="#0000aa">null</font>, <font color="#009999">16</font>);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<font color="#1e90ff">out</font>.<font color="#1e90ff">println</font>(<font color="#aa5500">&quot;Is valid BST: &quot;</font> + isValidBST(root));<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#aaaaaa; font-style: italic">/**</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;Time&nbsp;&nbsp;Complexity:&nbsp;&nbsp;O(log(N))</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">private</font> <font color="#0000aa">static</font> <font color="#00aaaa">boolean</font> <font color="#00aa00">isValidBST</font>(TreeNode root) {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">return</font> <font color="#00aa00">isValidBST</font>(root, Integer.<font color="#1e90ff">MIN_VALUE</font>, Integer.<font color="#1e90ff">MAX_VALUE</font>);<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">private</font> <font color="#0000aa">static</font> <font color="#00aaaa">boolean</font> <font color="#00aa00">isValidBST</font>(TreeNode root, <font color="#00aaaa">int</font> min, <font color="#00aaaa">int</font> max) {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">if</font> (root == <font color="#0000aa">null</font>)<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">return</font> <font color="#0000aa">true</font>;<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">if</font> (root.<font color="#1e90ff">data</font> &lt;= min || root.<font color="#1e90ff">data</font> &gt; max)<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">return</font> <font color="#0000aa">false</font>;<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">if</font> (!isValidBST(root.<font color="#1e90ff">left</font>, min, root.<font color="#1e90ff">data</font>) || !isValidBST(root.<font color="#1e90ff">right</font>, root.<font color="#1e90ff">data</font>, max))<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">return</font> <font color="#0000aa">false</font>;<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">return</font> <font color="#0000aa">true</font>;<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>}<br/>