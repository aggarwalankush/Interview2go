<font color="#0000aa">package</font> LinkedLists;<br/><br/><font color="#aaaaaa; font-style: italic">/**</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;Two&nbsp;&nbsp;numbers&nbsp;&nbsp;are&nbsp;&nbsp;represented&nbsp;&nbsp;by&nbsp;&nbsp;two&nbsp;&nbsp;linked&nbsp;&nbsp;lists.</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;The&nbsp;&nbsp;digits&nbsp;&nbsp;are&nbsp;&nbsp;stored&nbsp;&nbsp;in&nbsp;&nbsp;reverse&nbsp;&nbsp;order,</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*&nbsp;&nbsp;add&nbsp;&nbsp;these&nbsp;&nbsp;numbers&nbsp;&nbsp;and&nbsp;&nbsp;return&nbsp;&nbsp;result&nbsp;&nbsp;as&nbsp;&nbsp;a&nbsp;&nbsp;new&nbsp;&nbsp;linked&nbsp;&nbsp;list</font><br/><font color="#aaaaaa; font-style: italic">&nbsp;&nbsp;*/</font><br/><font color="#0000aa">public</font> <font color="#0000aa">class</font> <font color="#00aa00; text-decoration: underline">AddTwoNumbers</font> {<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">public</font> <font color="#0000aa">static</font> <font color="#00aaaa">void</font> <font color="#00aa00">main</font>(String[] args) {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&lt;Integer&gt; number1 = <font color="#0000aa">new</font> Node&lt;&gt;(<font color="#009999">1</font>);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number1.<font color="#1e90ff">append</font>(<font color="#009999">9</font>);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number1.<font color="#1e90ff">append</font>(<font color="#009999">5</font>);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&lt;Integer&gt; number2 = <font color="#0000aa">new</font> Node&lt;&gt;(<font color="#009999">8</font>);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number2.<font color="#1e90ff">append</font>(<font color="#009999">4</font>);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number2.<font color="#1e90ff">append</font>(<font color="#009999">7</font>);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<font color="#1e90ff">out</font>.<font color="#1e90ff">println</font>(<font color="#aa5500">&quot;Number 1: &quot;</font> + number1);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<font color="#1e90ff">out</font>.<font color="#1e90ff">println</font>(<font color="#aa5500">&quot;Number 2: &quot;</font> + number2);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<font color="#1e90ff">out</font>.<font color="#1e90ff">println</font>(<font color="#aa5500">&quot;Sum: &quot;</font> + add(number1, number2));<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">public</font> <font color="#0000aa">static</font> Node&lt;Integer&gt; <font color="#00aa00">add</font>(Node&lt;Integer&gt; num1, Node&lt;Integer&gt; num2) {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">return</font> <font color="#00aa00">add</font>(num1, num2, <font color="#009999">0</font>);<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">public</font> <font color="#0000aa">static</font> Node&lt;Integer&gt; <font color="#00aa00">add</font>(Node&lt;Integer&gt; num1, Node&lt;Integer&gt; num2, <font color="#00aaaa">int</font> carry) {<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">if</font> (num1 == <font color="#0000aa">null</font> &amp;&amp; num2 == <font color="#0000aa">null</font> &amp;&amp; carry == <font color="#009999">0</font>)<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">return</font> <font color="#0000aa">null</font>;<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#00aaaa">int</font> sum = carry;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">if</font> (num1 != <font color="#0000aa">null</font>)<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum += num1.<font color="#1e90ff">data</font>;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">if</font> (num2 != <font color="#0000aa">null</font>)<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum += num2.<font color="#1e90ff">data</font>;<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&lt;Integer&gt; result = <font color="#0000aa">new</font> Node&lt;&gt;(sum % <font color="#009999">10</font>);<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">if</font> (num1 != <font color="#0000aa">null</font> || num2 != <font color="#0000aa">null</font>) {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&lt;Integer&gt; node = add(num1 == <font color="#0000aa">null</font> ? <font color="#0000aa">null</font> : num1.<font color="#1e90ff">next</font>,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num2 == <font color="#0000aa">null</font> ? <font color="#0000aa">null</font> : num2.<font color="#1e90ff">next</font>,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum &gt;= <font color="#009999">10</font> ? <font color="#009999">1</font> : <font color="#009999">0</font>);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.<font color="#1e90ff">next</font> = node;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000aa">return</font> result;<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>}<br/>