<font color="#f92672">package</font> <font color="#f8f8f2">Trees</font><font color="#f92672">;</font><br/><br/><font color="#f92672">import</font> <font color="#f8f8f2">java.util.LinkedHashSet</font><font color="#f92672">;</font><br/><font color="#75715e">//@formatter:off</font><br/>&nbsp;<font color="#75715e">/**</font><br/><font color="#75715e">&nbsp;&nbsp;*&nbsp;&nbsp;Given&nbsp;&nbsp;a&nbsp;&nbsp;binary&nbsp;&nbsp;tree,&nbsp;&nbsp;find&nbsp;&nbsp;all&nbsp;&nbsp;nodes&nbsp;&nbsp;at&nbsp;&nbsp;distance&nbsp;&nbsp;K&nbsp;&nbsp;from&nbsp;&nbsp;leaf.</font><br/><font color="#75715e">&nbsp;&nbsp;*</font><br/><font color="#75715e">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10</font><br/><font color="#75715e">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\</font><br/><font color="#75715e">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1</font><br/><font color="#75715e">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\</font><br/><font color="#75715e">&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16</font><br/><font color="#75715e">&nbsp;&nbsp;*</font><br/><font color="#75715e">&nbsp;&nbsp;*/</font><br/><font color="#75715e">//@formatter:on</font><br/><br/>&nbsp;<font color="#66d9ef">public</font> <font color="#66d9ef">class</font> <font color="#a6e22e">BTNodeDistanceKFromLeaf</font> <font color="#f92672">{</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">public</font> <font color="#66d9ef">static</font> <font color="#66d9ef">void</font> <font color="#a6e22e">main</font><font color="#f92672">(</font><font color="#f8f8f2">String</font><font color="#f92672">[]</font> <font color="#f8f8f2">args</font><font color="#f92672">)</font> <font color="#f92672">{</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">TreeNode</font> <font color="#f8f8f2">root</font> <font color="#f92672">=</font> <font color="#f8f8f2">TreeUtils</font><font color="#f92672">.</font><font color="#a6e22e">createBinaryTree</font><font color="#f92672">(</font><font color="#ae81ff">10</font><font color="#f92672">,</font> <font color="#ae81ff">17</font><font color="#f92672">,</font> <font color="#ae81ff">1</font><font color="#f92672">,</font> <font color="#ae81ff">3</font><font color="#f92672">,</font> <font color="#ae81ff">9</font><font color="#f92672">,</font> <font color="#66d9ef">null</font><font color="#f92672">,</font> <font color="#ae81ff">16</font><font color="#f92672">);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">for</font> <font color="#f92672">(</font><font color="#66d9ef">int</font> <font color="#f8f8f2">i</font> <font color="#f92672">=</font> <font color="#ae81ff">0</font><font color="#f92672">;</font> <font color="#f8f8f2">i</font> <font color="#f92672">&lt;</font> <font color="#ae81ff">3</font><font color="#f92672">;</font> <font color="#f8f8f2">i</font><font color="#f92672">++)</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">System</font><font color="#f92672">.</font><font color="#a6e22e">out</font><font color="#f92672">.</font><font color="#a6e22e">println</font><font color="#f92672">(</font><font color="#e6db74">&quot;Nodes at distance K = &quot;</font> <font color="#f92672">+</font> <font color="#f8f8f2">i</font> <font color="#f92672">+</font> <font color="#e6db74">&quot; from leaf are &quot;</font> <font color="#f92672">+</font> <font color="#f8f8f2">findNodes</font><font color="#f92672">(</font><font color="#f8f8f2">root</font><font color="#f92672">,</font> <font color="#f8f8f2">i</font><font color="#f92672">));</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f92672">}</font><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">public</font> <font color="#66d9ef">static</font> <font color="#f8f8f2">LinkedHashSet</font><font color="#f92672">&lt;</font><font color="#f8f8f2">Integer</font><font color="#f92672">&gt;</font> <font color="#a6e22e">findNodes</font><font color="#f92672">(</font><font color="#f8f8f2">TreeNode</font> <font color="#f8f8f2">root</font><font color="#f92672">,</font> <font color="#66d9ef">int</font> <font color="#f8f8f2">k</font><font color="#f92672">)</font> <font color="#f92672">{</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">LinkedHashSet</font><font color="#f92672">&lt;</font><font color="#f8f8f2">Integer</font><font color="#f92672">&gt;</font> <font color="#f8f8f2">nodes</font> <font color="#f92672">=</font> <font color="#66d9ef">new</font> <font color="#f8f8f2">LinkedHashSet</font><font color="#f92672">&lt;&gt;();</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">int</font> <font color="#f8f8f2">depth</font> <font color="#f92672">=</font> <font color="#f8f8f2">findDepth</font><font color="#f92672">(</font><font color="#f8f8f2">root</font><font color="#f92672">);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">int</font> <font color="#f8f8f2">path</font><font color="#f92672">[]</font> <font color="#f92672">=</font> <font color="#66d9ef">new</font> <font color="#66d9ef">int</font><font color="#f92672">[</font><font color="#f8f8f2">depth</font><font color="#f92672">];</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">findNodes</font><font color="#f92672">(</font><font color="#f8f8f2">root</font><font color="#f92672">,</font> <font color="#f8f8f2">k</font><font color="#f92672">,</font> <font color="#f8f8f2">path</font><font color="#f92672">,</font> <font color="#ae81ff">0</font><font color="#f92672">,</font> <font color="#f8f8f2">nodes</font><font color="#f92672">);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#f8f8f2">nodes</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f92672">}</font><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">private</font> <font color="#66d9ef">static</font> <font color="#66d9ef">void</font> <font color="#a6e22e">findNodes</font><font color="#f92672">(</font><font color="#f8f8f2">TreeNode</font> <font color="#f8f8f2">node</font><font color="#f92672">,</font> <font color="#66d9ef">int</font> <font color="#f8f8f2">k</font><font color="#f92672">,</font> <font color="#66d9ef">int</font><font color="#f92672">[]</font> <font color="#f8f8f2">path</font><font color="#f92672">,</font> <font color="#66d9ef">int</font> <font color="#f8f8f2">level</font><font color="#f92672">,</font> <font color="#f8f8f2">LinkedHashSet</font><font color="#f92672">&lt;</font><font color="#f8f8f2">Integer</font><font color="#f92672">&gt;</font> <font color="#f8f8f2">nodes</font><font color="#f92672">)</font> <font color="#f92672">{</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">if</font> <font color="#f92672">(</font><font color="#f8f8f2">node</font> <font color="#f92672">==</font> <font color="#66d9ef">null</font><font color="#f92672">)</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">path</font><font color="#f92672">[</font><font color="#f8f8f2">level</font><font color="#f92672">]</font> <font color="#f92672">=</font> <font color="#f8f8f2">node</font><font color="#f92672">.</font><font color="#a6e22e">data</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">if</font> <font color="#f92672">(</font><font color="#f8f8f2">node</font><font color="#f92672">.</font><font color="#a6e22e">left</font> <font color="#f92672">==</font> <font color="#66d9ef">null</font> <font color="#f92672">&amp;&amp;</font> <font color="#f8f8f2">node</font><font color="#f92672">.</font><font color="#a6e22e">right</font> <font color="#f92672">==</font> <font color="#66d9ef">null</font> <font color="#f92672">&amp;&amp;</font> <font color="#f92672">(</font><font color="#f8f8f2">level</font> <font color="#f92672">-</font> <font color="#f8f8f2">k</font><font color="#f92672">)</font> <font color="#f92672">&gt;=</font> <font color="#ae81ff">0</font><font color="#f92672">)</font> <font color="#f92672">{</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">nodes</font><font color="#f92672">.</font><font color="#a6e22e">add</font><font color="#f92672">(</font><font color="#f8f8f2">path</font><font color="#f92672">[</font><font color="#f8f8f2">level</font> <font color="#f92672">-</font> <font color="#f8f8f2">k</font><font color="#f92672">]);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f92672">}</font><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">findNodes</font><font color="#f92672">(</font><font color="#f8f8f2">node</font><font color="#f92672">.</font><font color="#a6e22e">left</font><font color="#f92672">,</font> <font color="#f8f8f2">k</font><font color="#f92672">,</font> <font color="#f8f8f2">path</font><font color="#f92672">,</font> <font color="#f8f8f2">level</font> <font color="#f92672">+</font> <font color="#ae81ff">1</font><font color="#f92672">,</font> <font color="#f8f8f2">nodes</font><font color="#f92672">);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">findNodes</font><font color="#f92672">(</font><font color="#f8f8f2">node</font><font color="#f92672">.</font><font color="#a6e22e">right</font><font color="#f92672">,</font> <font color="#f8f8f2">k</font><font color="#f92672">,</font> <font color="#f8f8f2">path</font><font color="#f92672">,</font> <font color="#f8f8f2">level</font> <font color="#f92672">+</font> <font color="#ae81ff">1</font><font color="#f92672">,</font> <font color="#f8f8f2">nodes</font><font color="#f92672">);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f92672">}</font><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">private</font> <font color="#66d9ef">static</font> <font color="#66d9ef">int</font> <font color="#a6e22e">findDepth</font><font color="#f92672">(</font><font color="#f8f8f2">TreeNode</font> <font color="#f8f8f2">node</font><font color="#f92672">)</font> <font color="#f92672">{</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">if</font> <font color="#f92672">(</font><font color="#f8f8f2">node</font> <font color="#f92672">==</font> <font color="#66d9ef">null</font><font color="#f92672">)</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#ae81ff">0</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#ae81ff">1</font> <font color="#f92672">+</font> <font color="#f8f8f2">Math</font><font color="#f92672">.</font><font color="#a6e22e">max</font><font color="#f92672">(</font><font color="#f8f8f2">findDepth</font><font color="#f92672">(</font><font color="#f8f8f2">node</font><font color="#f92672">.</font><font color="#a6e22e">left</font><font color="#f92672">),</font> <font color="#f8f8f2">findDepth</font><font color="#f92672">(</font><font color="#f8f8f2">node</font><font color="#f92672">.</font><font color="#a6e22e">right</font><font color="#f92672">));</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f92672">}</font><br/>&nbsp;<font color="#f92672">}</font><br/>