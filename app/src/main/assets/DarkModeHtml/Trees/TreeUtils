<font color="#f92672">package</font> <font color="#f8f8f2">Trees</font><font color="#f92672">;</font><br/><br/><font color="#f92672">import</font> <font color="#f8f8f2">java.util.ArrayDeque</font><font color="#f92672">;</font><br/><br/><font color="#66d9ef">public</font> <font color="#66d9ef">class</font> <font color="#a6e22e">TreeUtils</font> <font color="#f92672">{</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#75715e">/**</font><br/><font color="#75715e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;@param&nbsp;&nbsp;array&nbsp;&nbsp;-&nbsp;&nbsp;sorted&nbsp;&nbsp;array&nbsp;&nbsp;of&nbsp;&nbsp;elements</font><br/><font color="#75715e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;@return&nbsp;&nbsp;root&nbsp;&nbsp;of&nbsp;&nbsp;BST</font><br/><font color="#75715e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">public</font> <font color="#66d9ef">static</font> <font color="#f8f8f2">TreeNode</font> <font color="#a6e22e">createBST</font><font color="#f92672">(</font><font color="#66d9ef">int</font><font color="#f92672">...</font> <font color="#f8f8f2">array</font><font color="#f92672">)</font> <font color="#f92672">{</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#a6e22e">arrayToBST</font><font color="#f92672">(</font><font color="#f8f8f2">array</font><font color="#f92672">,</font> <font color="#ae81ff">0</font><font color="#f92672">,</font> <font color="#f8f8f2">array</font><font color="#f92672">.</font><font color="#a6e22e">length</font> <font color="#f92672">-</font> <font color="#ae81ff">1</font><font color="#f92672">);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f92672">}</font><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">private</font> <font color="#66d9ef">static</font> <font color="#f8f8f2">TreeNode</font> <font color="#a6e22e">arrayToBST</font><font color="#f92672">(</font><font color="#66d9ef">int</font><font color="#f92672">[]</font> <font color="#f8f8f2">array</font><font color="#f92672">,</font> <font color="#66d9ef">int</font> <font color="#f8f8f2">low</font><font color="#f92672">,</font> <font color="#66d9ef">int</font> <font color="#f8f8f2">high</font><font color="#f92672">)</font> <font color="#f92672">{</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">if</font> <font color="#f92672">(</font><font color="#f8f8f2">low</font> <font color="#f92672">&gt;</font> <font color="#f8f8f2">high</font><font color="#f92672">)</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#66d9ef">null</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">int</font> <font color="#f8f8f2">mid</font> <font color="#f92672">=</font> <font color="#f8f8f2">low</font> <font color="#f92672">+</font> <font color="#f92672">(</font><font color="#f8f8f2">high</font> <font color="#f92672">-</font> <font color="#f8f8f2">low</font><font color="#f92672">)</font> <font color="#f92672">/</font> <font color="#ae81ff">2</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">TreeNode</font> <font color="#f8f8f2">root</font> <font color="#f92672">=</font> <font color="#66d9ef">new</font> <font color="#f8f8f2">TreeNode</font><font color="#f92672">(</font><font color="#f8f8f2">array</font><font color="#f92672">[</font><font color="#f8f8f2">mid</font><font color="#f92672">]);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">root</font><font color="#f92672">.</font><font color="#a6e22e">setLeftChild</font><font color="#f92672">(</font><font color="#f8f8f2">arrayToBST</font><font color="#f92672">(</font><font color="#f8f8f2">array</font><font color="#f92672">,</font> <font color="#f8f8f2">low</font><font color="#f92672">,</font> <font color="#f8f8f2">mid</font> <font color="#f92672">-</font> <font color="#ae81ff">1</font><font color="#f92672">));</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">root</font><font color="#f92672">.</font><font color="#a6e22e">setRightChild</font><font color="#f92672">(</font><font color="#f8f8f2">arrayToBST</font><font color="#f92672">(</font><font color="#f8f8f2">array</font><font color="#f92672">,</font> <font color="#f8f8f2">mid</font> <font color="#f92672">+</font> <font color="#ae81ff">1</font><font color="#f92672">,</font> <font color="#f8f8f2">high</font><font color="#f92672">));</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#f8f8f2">root</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f92672">}</font><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#75715e">/**</font><br/><font color="#75715e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;@param&nbsp;&nbsp;root&nbsp;&nbsp;-&nbsp;&nbsp;root&nbsp;&nbsp;of&nbsp;&nbsp;BST</font><br/><font color="#75715e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;@param&nbsp;&nbsp;data&nbsp;&nbsp;-&nbsp;&nbsp;data&nbsp;&nbsp;of&nbsp;&nbsp;node&nbsp;&nbsp;to&nbsp;&nbsp;be&nbsp;&nbsp;found</font><br/><font color="#75715e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;@return&nbsp;&nbsp;Node&nbsp;&nbsp;having&nbsp;&nbsp;required&nbsp;&nbsp;data</font><br/><font color="#75715e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">public</font> <font color="#66d9ef">static</font> <font color="#f8f8f2">TreeNode</font> <font color="#a6e22e">findBST</font><font color="#f92672">(</font><font color="#f8f8f2">TreeNode</font> <font color="#f8f8f2">root</font><font color="#f92672">,</font> <font color="#66d9ef">int</font> <font color="#f8f8f2">data</font><font color="#f92672">)</font> <font color="#f92672">{</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">if</font> <font color="#f92672">(</font><font color="#f8f8f2">root</font> <font color="#f92672">==</font> <font color="#66d9ef">null</font><font color="#f92672">)</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#66d9ef">null</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">if</font> <font color="#f92672">(</font><font color="#f8f8f2">root</font><font color="#f92672">.</font><font color="#a6e22e">data</font> <font color="#f92672">==</font> <font color="#f8f8f2">data</font><font color="#f92672">)</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#f8f8f2">root</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">if</font> <font color="#f92672">(</font><font color="#f8f8f2">data</font> <font color="#f92672">&lt;</font> <font color="#f8f8f2">root</font><font color="#f92672">.</font><font color="#a6e22e">data</font><font color="#f92672">)</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#f8f8f2">root</font><font color="#f92672">.</font><font color="#a6e22e">left</font> <font color="#f92672">!=</font> <font color="#66d9ef">null</font> <font color="#f92672">?</font> <font color="#f8f8f2">findBST</font><font color="#f92672">(</font><font color="#f8f8f2">root</font><font color="#f92672">.</font><font color="#a6e22e">left</font><font color="#f92672">,</font> <font color="#f8f8f2">data</font><font color="#f92672">)</font> <font color="#f92672">:</font> <font color="#66d9ef">null</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">else</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#f8f8f2">root</font><font color="#f92672">.</font><font color="#a6e22e">right</font> <font color="#f92672">!=</font> <font color="#66d9ef">null</font> <font color="#f92672">?</font> <font color="#f8f8f2">findBST</font><font color="#f92672">(</font><font color="#f8f8f2">root</font><font color="#f92672">.</font><font color="#a6e22e">right</font><font color="#f92672">,</font> <font color="#f8f8f2">data</font><font color="#f92672">)</font> <font color="#f92672">:</font> <font color="#66d9ef">null</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f92672">}</font><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#75715e">/**</font><br/><font color="#75715e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;@param&nbsp;&nbsp;array&nbsp;&nbsp;-&nbsp;&nbsp;array&nbsp;&nbsp;of&nbsp;&nbsp;elements,&nbsp;&nbsp;can&nbsp;&nbsp;have&nbsp;&nbsp;null&nbsp;&nbsp;values&nbsp;&nbsp;if&nbsp;&nbsp;left&nbsp;&nbsp;or&nbsp;&nbsp;right&nbsp;&nbsp;child&nbsp;&nbsp;is&nbsp;&nbsp;null&nbsp;&nbsp;of&nbsp;&nbsp;a&nbsp;&nbsp;non-leaf&nbsp;&nbsp;node</font><br/><font color="#75715e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;@return&nbsp;&nbsp;root&nbsp;&nbsp;of&nbsp;&nbsp;binary&nbsp;&nbsp;tree</font><br/><font color="#75715e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">public</font> <font color="#66d9ef">static</font> <font color="#f8f8f2">TreeNode</font> <font color="#a6e22e">createBinaryTree</font><font color="#f92672">(</font><font color="#f8f8f2">Integer</font><font color="#f92672">...</font> <font color="#f8f8f2">array</font><font color="#f92672">)</font> <font color="#f92672">{</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">if</font> <font color="#f92672">(</font><font color="#f8f8f2">array</font> <font color="#f92672">==</font> <font color="#66d9ef">null</font> <font color="#f92672">||</font> <font color="#f8f8f2">array</font><font color="#f92672">.</font><font color="#a6e22e">length</font> <font color="#f92672">&lt;</font> <font color="#ae81ff">1</font><font color="#f92672">)</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#66d9ef">null</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">TreeNode</font> <font color="#f8f8f2">root</font> <font color="#f92672">=</font> <font color="#66d9ef">new</font> <font color="#f8f8f2">TreeNode</font><font color="#f92672">(</font><font color="#f8f8f2">array</font><font color="#f92672">[</font><font color="#ae81ff">0</font><font color="#f92672">]);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">ArrayDeque</font><font color="#f92672">&lt;</font><font color="#f8f8f2">TreeNode</font><font color="#f92672">&gt;</font> <font color="#f8f8f2">queue</font> <font color="#f92672">=</font> <font color="#66d9ef">new</font> <font color="#f8f8f2">ArrayDeque</font><font color="#f92672">&lt;&gt;();</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">queue</font><font color="#f92672">.</font><font color="#a6e22e">offer</font><font color="#f92672">(</font><font color="#f8f8f2">root</font><font color="#f92672">);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">int</font> <font color="#f8f8f2">i</font> <font color="#f92672">=</font> <font color="#ae81ff">1</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">int</font> <font color="#f8f8f2">len</font> <font color="#f92672">=</font> <font color="#f8f8f2">array</font><font color="#f92672">.</font><font color="#a6e22e">length</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">while</font> <font color="#f92672">(</font><font color="#f8f8f2">i</font> <font color="#f92672">!=</font> <font color="#f8f8f2">len</font><font color="#f92672">)</font> <font color="#f92672">{</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">TreeNode</font> <font color="#f8f8f2">node</font> <font color="#f92672">=</font> <font color="#f8f8f2">queue</font><font color="#f92672">.</font><font color="#a6e22e">poll</font><font color="#f92672">();</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">node</font><font color="#f92672">.</font><font color="#a6e22e">setLeftChild</font><font color="#f92672">(</font><font color="#f8f8f2">array</font><font color="#f92672">[</font><font color="#f8f8f2">i</font><font color="#f92672">]</font> <font color="#f92672">!=</font> <font color="#66d9ef">null</font> <font color="#f92672">?</font> <font color="#66d9ef">new</font> <font color="#f8f8f2">TreeNode</font><font color="#f92672">(</font><font color="#f8f8f2">array</font><font color="#f92672">[</font><font color="#f8f8f2">i</font><font color="#f92672">])</font> <font color="#f92672">:</font> <font color="#66d9ef">null</font><font color="#f92672">);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">i</font><font color="#f92672">++;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">if</font> <font color="#f92672">(</font><font color="#f8f8f2">node</font><font color="#f92672">.</font><font color="#a6e22e">left</font> <font color="#f92672">!=</font> <font color="#66d9ef">null</font><font color="#f92672">)</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">queue</font><font color="#f92672">.</font><font color="#a6e22e">add</font><font color="#f92672">(</font><font color="#f8f8f2">node</font><font color="#f92672">.</font><font color="#a6e22e">left</font><font color="#f92672">);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">if</font> <font color="#f92672">(</font><font color="#f8f8f2">i</font> <font color="#f92672">!=</font> <font color="#f8f8f2">len</font><font color="#f92672">)</font> <font color="#f92672">{</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">node</font><font color="#f92672">.</font><font color="#a6e22e">setRightChild</font><font color="#f92672">(</font><font color="#f8f8f2">array</font><font color="#f92672">[</font><font color="#f8f8f2">i</font><font color="#f92672">]</font> <font color="#f92672">!=</font> <font color="#66d9ef">null</font> <font color="#f92672">?</font> <font color="#66d9ef">new</font> <font color="#f8f8f2">TreeNode</font><font color="#f92672">(</font><font color="#f8f8f2">array</font><font color="#f92672">[</font><font color="#f8f8f2">i</font><font color="#f92672">])</font> <font color="#f92672">:</font> <font color="#66d9ef">null</font><font color="#f92672">);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">i</font><font color="#f92672">++;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">if</font> <font color="#f92672">(</font><font color="#f8f8f2">node</font><font color="#f92672">.</font><font color="#a6e22e">right</font> <font color="#f92672">!=</font> <font color="#66d9ef">null</font><font color="#f92672">)</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">queue</font><font color="#f92672">.</font><font color="#a6e22e">add</font><font color="#f92672">(</font><font color="#f8f8f2">node</font><font color="#f92672">.</font><font color="#a6e22e">right</font><font color="#f92672">);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f92672">}</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f92672">}</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#f8f8f2">root</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f92672">}</font><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#75715e">/**</font><br/><font color="#75715e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;@param&nbsp;&nbsp;root&nbsp;&nbsp;-&nbsp;&nbsp;root&nbsp;&nbsp;of&nbsp;&nbsp;binary&nbsp;&nbsp;tree</font><br/><font color="#75715e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;@param&nbsp;&nbsp;data&nbsp;&nbsp;-&nbsp;&nbsp;data&nbsp;&nbsp;of&nbsp;&nbsp;node&nbsp;&nbsp;to&nbsp;&nbsp;be&nbsp;&nbsp;found</font><br/><font color="#75715e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;@return&nbsp;&nbsp;Node&nbsp;&nbsp;having&nbsp;&nbsp;required&nbsp;&nbsp;data</font><br/><font color="#75715e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">public</font> <font color="#66d9ef">static</font> <font color="#f8f8f2">TreeNode</font> <font color="#a6e22e">findBinaryTree</font><font color="#f92672">(</font><font color="#f8f8f2">TreeNode</font> <font color="#f8f8f2">root</font><font color="#f92672">,</font> <font color="#66d9ef">int</font> <font color="#f8f8f2">data</font><font color="#f92672">)</font> <font color="#f92672">{</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">if</font> <font color="#f92672">(</font><font color="#f8f8f2">root</font> <font color="#f92672">==</font> <font color="#66d9ef">null</font><font color="#f92672">)</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#66d9ef">null</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">if</font> <font color="#f92672">(</font><font color="#f8f8f2">root</font><font color="#f92672">.</font><font color="#a6e22e">data</font> <font color="#f92672">==</font> <font color="#f8f8f2">data</font><font color="#f92672">)</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#f8f8f2">root</font><font color="#f92672">;</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f8f8f2">TreeNode</font> <font color="#f8f8f2">node</font> <font color="#f92672">=</font> <font color="#f8f8f2">findBinaryTree</font><font color="#f92672">(</font><font color="#f8f8f2">root</font><font color="#f92672">.</font><font color="#a6e22e">left</font><font color="#f92672">,</font> <font color="#f8f8f2">data</font><font color="#f92672">);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66d9ef">return</font> <font color="#f8f8f2">node</font> <font color="#f92672">!=</font> <font color="#66d9ef">null</font> <font color="#f92672">?</font> <font color="#f8f8f2">node</font> <font color="#f92672">:</font> <font color="#f8f8f2">findBinaryTree</font><font color="#f92672">(</font><font color="#f8f8f2">root</font><font color="#f92672">.</font><font color="#a6e22e">right</font><font color="#f92672">,</font> <font color="#f8f8f2">data</font><font color="#f92672">);</font><br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#f92672">}</font><br/><font color="#f92672">}</font><br/>